{"name":"Online Games","tagline":"Your favorite API for Python Server gaming","body":"NetGameAPI\r\n==========\r\nThe NetGameAPI is currently not optimized for realtime data transfer\r\n\r\n##Install\r\n\r\nAdd the gameserver folder to your Project\r\n\r\nEmbed the API with:\r\n\r\n ```python\r\n from gameserver.netgameapi import *\r\n ```\r\n\r\n</br>\r\n___\r\nTransmitting Data\r\n------\r\n\r\n1. **Create a instance of the netgameapi class**  \r\n ```api = NetGameApi(name, game, lambda: receiver, [address], [port]) ```  \r\n    *  ```name ```     = your username  \r\n    *  ```game ```     = name of your game\r\n    *  ```receiver ``` = a function with one parameter, the parameter is in the protocol dictionary form  \r\n    *  ```address ```  = the ip address or the domainname of the server \\[optional\\]  \r\n    *  ```port ```     = port of the server \\[optional\\]  \r\n  \r\n2. **Connect to server**  \r\n   ```api.makeConnection() ```\r\n    * If the username is already taken you'll get the [error doubleusername](#error.doubleusername)\r\n    \r\n3. **Make a new Thread that listens to the server**  \r\n    ```tcpthread = Thread(name='tcp', target=api.startReceiving()) ```\r\n\r\n4. **You'll receive the [playerlist](#listplayers)**   \r\n   It will only contain the players that play your game and are currently not playing  \r\n   \r\n5. **Select a player from the playerlist**  \r\n   Use the username given in the playerlist  \r\n   ```api.connectToPlayer(username_of_opponent) ```\r\n\r\n6. **Server Processing**  \r\n    * The server checks if your opponent already is ingame. If he already is, the [error notavailable](#error.notavailable) gets thrown\r\n\r\n7. **Your opponent receives your connect as a [gameinvitation](#gameinvitation)**  \r\n    * Your opponent can either [accept](#accept) or [refuse](#refuse) the invitation\r\n    * If he accepts, then you'll receive a [connection_established](#connection_established)\r\n    * If he refuses, then you'll receive the [error connection_refused](#error.connection_refused)\r\n\r\n8. **Inform server, that you are now ready to play**  \r\n   Send the server ```connectionEstablished(opponent) ```\r\n\r\n9. **Now you can send your Gamedata**  \r\n    ```api.submitGameData(content) ```\r\n\r\n</br>\r\n___\r\nProtocol\r\n------\r\n###Make a connection using  ```makeConnection() ```\r\n```python\r\n{\r\n    \"action\":\"connection\",\r\n    \"data\":{\r\n        \"username\":\"your_username\",\r\n        \"game\":\"your_game_name\"\r\n    }\r\n}\r\n```\r\n\r\n###Connect to player  \r\nUse  ```connectToPlayer(user_you_wish_to_connect) ``` to invite the other player\r\n```python\r\n{\r\n    \"action\":\"connect\",\r\n    \"data\":{\r\n        \"master\": \"your_username\",\r\n        \"opponent\": user_you_wish_to_connect\r\n    }\r\n}\r\n```\r\n\r\n###<a name=\"gameinvitation\">Game Invitation</a>  \r\nYou'll receive this if the master player sends a  ```connectToPlayer(user_requesting_connection) ``` to the server\r\n```python\r\n{\r\n    \"action\": \"gameinvitation\",\r\n    \"data\": {\r\n        \"master\": user_requesting_connection\r\n    }\r\n}\r\n```\r\n\r\n###<a name=\"accept\">Accept Game Invitation</a>  \r\nYou accept the invitation with  ```acceptGameInvitation(user_requesting_connection) ```\r\n```python\r\n{\r\n            \"action\": \"connect_accepted\",\r\n            \"data\": {\r\n                \"opponent\": user_requesting_connection\r\n     }\r\n}\r\n```\r\n\r\n###<a name=\"refuse\">Refuse Game Invitation</a>  \r\nYou refuse the invitation with  ```refuseGameInvitation(user_requesting_connection) ```\r\n```python\r\n{\r\n            \"action\": \"connect_refused\",\r\n            \"data\": {\r\n                \"opponent\": user_requesting_connection\r\n     }\r\n}\r\n```\r\n\r\n###<a name=\"connection_established\">Connection to opponent established</a>  \r\nYou are the master of the game\r\n```python\r\n{\r\n    \"action\":\"connection_established\",\r\n    \"data\":{\r\n        \"username\":\"opponent_username\"\r\n    }\r\n}\r\n```\r\n\r\n###<a name=\"listplayers\">Playerlist</a>  \r\nFormat of playerlist\r\n```python\r\n{\r\n    \"action\": \"listplayers\",\r\n    \"data\": [\r\n        {\"playing\": 0,\"username\": \"manuel\", \"game\": \"tictactoe\"},\r\n        {\"playing\": 1,\"username\": \"lukas\", \"game\": \"tictactoe\"}\r\n    ]\r\n}\r\n```\r\n____\r\n</br>\r\nErrors\r\n------\r\nErrors returned by the server\r\n####<a name=\"error.doubleusername\">doubleusername</a>\r\n```python\r\n{\r\n    \"action\":\"error\",\r\n    \"data\":{\r\n        \"errorinfo\":\"doubleusername\",\r\n        \"helpmessage\":\"Please connect with different username.\"\r\n    }\r\n}\r\n```\r\n\r\n####<a name=\"error.notavailable\">notavailable</a>\r\n```python\r\n{\r\n    \"action\":\"error\",\r\n    \"data\":{\r\n        \"errorinfo\":\"notavailable\",\r\n        \"helpmessage\":\"User already ingame.\"\r\n    }\r\n}\r\n```\r\n\r\n####<a name=\"error.connection_refused\">connection_refused</a>\r\n```python\r\n{\r\n    \"action\":\"error\",\r\n    \"data\":{\r\n        \"errorinfo\":\"connection_refused\",\r\n        \"helpmessage\":\"Your opponent refused.\"\r\n    }\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}